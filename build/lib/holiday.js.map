{
  "version": 3,
  "sources": ["../../src/lib/holiday.ts"],
  "sourcesContent": ["import axios from 'axios';\nimport * as sched from 'node-schedule';\n\nexport interface ifHolidays {\n    title: string;\n    date: string;\n    locs: string[];\n    dayName: string;\n    tagName: string;\n}\n\nexport class Holidays {\n    private static holdiays?: ifHolidays[];\n    private static schedjob?: sched.Job;\n    /**\n     * Contructor\n     *\n     * @param state state like HH\n     * @param year year like 2025\n     */\n    private constructor() {}\n\n    /**\n     *  set Holidays\n     */\n    public static async setHolidaysSet(): Promise<void> {\n        const year = new Date().getFullYear().toString();\n        const url = `https://ipty.de/feiertag/api.php?do=getFeiertage&jahr=${year}&outformat=Y-m-d`;\n        const response = await axios.get(url);\n        if (response?.data) {\n            this.holdiays = response.data; // JSON.parse(response.data);\n        }\n    }\n\n    /**\n     * holiday today?\n     *\n     * @param state state like HH\n     * @returns bolean\n     */\n    public static isHolidayToday(state: string): boolean {\n        const today = new Date().toISOString().split('T')[0]; // Heutiges Datum im Format YYYY-MM-DD\n        if (this.holdiays) {\n            return this.holdiays.some(holiday => holiday.date === today && holiday.locs.includes(state));\n        }\n        return false;\n    }\n\n    /**\n     * Poll once the year the noew holiday calender\n     */\n    public static pollHolidays(): void {\n        if (this.schedjob) {\n            sched.cancelJob(this.schedjob);\n        }\n        this.schedjob = sched.scheduleJob('1 0 * * *', async () => {\n            await this.setHolidaysSet();\n        });\n    }\n\n    /**\n     * Get all holidays\n     *\n     * @returns holidays\n     */\n    public static getHolidays(): ifHolidays[] | undefined {\n        return this.holdiays;\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAkB;AAClB,YAAuB;AAUhB,MAAM,SAAS;AAAA,EAClB,OAAe;AAAA,EACf,OAAe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOP,cAAc;AAAA,EAAC;AAAA;AAAA;AAAA;AAAA,EAKvB,aAAoB,iBAAgC;AAChD,UAAM,QAAO,oBAAI,KAAK,GAAE,YAAY,EAAE,SAAS;AAC/C,UAAM,MAAM,yDAAyD,IAAI;AACzE,UAAM,WAAW,MAAM,aAAAA,QAAM,IAAI,GAAG;AACpC,QAAI,qCAAU,MAAM;AAChB,WAAK,WAAW,SAAS;AAAA,IAC7B;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQA,OAAc,eAAe,OAAwB;AACjD,UAAM,SAAQ,oBAAI,KAAK,GAAE,YAAY,EAAE,MAAM,GAAG,EAAE,CAAC;AACnD,QAAI,KAAK,UAAU;AACf,aAAO,KAAK,SAAS,KAAK,aAAW,QAAQ,SAAS,SAAS,QAAQ,KAAK,SAAS,KAAK,CAAC;AAAA,IAC/F;AACA,WAAO;AAAA,EACX;AAAA;AAAA;AAAA;AAAA,EAKA,OAAc,eAAqB;AAC/B,QAAI,KAAK,UAAU;AACf,YAAM,UAAU,KAAK,QAAQ;AAAA,IACjC;AACA,SAAK,WAAW,MAAM,YAAY,aAAa,YAAY;AACvD,YAAM,KAAK,eAAe;AAAA,IAC9B,CAAC;AAAA,EACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOA,OAAc,cAAwC;AAClD,WAAO,KAAK;AAAA,EAChB;AACJ;",
  "names": ["axios"]
}
